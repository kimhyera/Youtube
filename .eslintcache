[{"C:\\markup\\projects\\dream_coding\\react-basic\\template\\src\\index.js":"1","C:\\markup\\projects\\dream_coding\\react-basic\\template\\src\\app.jsx":"2","C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\index.js":"3","C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\app.jsx":"4","C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\components\\videoList.jsx":"5"},{"size":223,"mtime":1606891311240,"results":"6","hashOfConfig":"7"},{"size":93,"mtime":1606891229765,"results":"8","hashOfConfig":"7"},{"size":224,"mtime":1611812727616,"results":"9","hashOfConfig":"10"},{"size":789,"mtime":1612158979697,"results":"11","hashOfConfig":"10"},{"size":1179,"mtime":1612159713571,"results":"12","hashOfConfig":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e8rxb1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kicimh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\markup\\projects\\dream_coding\\react-basic\\template\\src\\index.js",[],"C:\\markup\\projects\\dream_coding\\react-basic\\template\\src\\app.jsx",[],"C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\index.js",[],"C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\app.jsx",["24"],"import React, { useState, useEffect, useCallback } from 'react'\nimport VideoList from './components/videoList'\n\nimport './css/app.css';\n\n\nconst APIKEY = 'AIzaSyDQSEHKzs2p2us3I6RNFbfFa2Huq9kWqa0';\n\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    console.log('video list');\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n    };\n    fetch(`https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=${APIKEY}`, requestOptions)\n\n\n      .then((response) => response.json())\n      .then((result) => setVideos(result.items))\n      .catch((error) => console.log('error', error));\n  }, []);\n\n  console.log(videos);\n\n\n\n  return (\n    <VideoList videos={videos} />\n  )\n\n}\n\nexport default App;\n","C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\components\\videoList.jsx",["25"],{"ruleId":"26","severity":1,"message":"27","line":1,"column":38,"nodeType":"28","messageId":"29","endLine":1,"endColumn":49},{"ruleId":"30","severity":1,"message":"31","line":19,"column":13,"nodeType":"32","endLine":19,"endColumn":47},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]