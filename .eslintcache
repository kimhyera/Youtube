[{"C:\\markup\\projects\\dream_coding\\react-basic\\template\\src\\index.js":"1","C:\\markup\\projects\\dream_coding\\react-basic\\template\\src\\app.jsx":"2","C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\index.js":"3","C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\app.jsx":"4","C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\components\\videoList.jsx":"5"},{"size":223,"mtime":1606891311240,"results":"6","hashOfConfig":"7"},{"size":93,"mtime":1606891229765,"results":"8","hashOfConfig":"7"},{"size":224,"mtime":1611812727616,"results":"9","hashOfConfig":"10"},{"size":804,"mtime":1612156777709,"results":"11","hashOfConfig":"10"},{"size":1171,"mtime":1612156359428,"results":"12","hashOfConfig":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e8rxb1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kicimh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\markup\\projects\\dream_coding\\react-basic\\template\\src\\index.js",[],"C:\\markup\\projects\\dream_coding\\react-basic\\template\\src\\app.jsx",[],"C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\index.js",[],"C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\app.jsx",["24"],"C:\\markup\\projects\\dream_coding\\react-basic\\youtube\\src\\components\\videoList.jsx",["25"],"import React, { useEffect } from \"react\";\r\n\r\nconst VideoItem = function ({ item, onClick }) {\r\n\r\n    useEffect(() => {\r\n        console.log('값이 설정됨');\r\n\r\n    })\r\n\r\n\r\n    const videoImg = item.snippet.thumbnails.standard.url;\r\n    const videoTitle = item.snippet.title;\r\n    const videoName = item.snippet.channelTitle;\r\n\r\n    console.log(item);\r\n\r\n    return (\r\n        <div className=\"video-item\">\r\n            <a href=\"#\" className=\"thumbnail\">\r\n\r\n                <div className=\"video-item-cover\">\r\n                    <img className=\"video-item-img\" src={videoImg} alt=\"\" />\r\n\r\n                </div>\r\n                <div className=\"video-item-details\">\r\n                    <p className=\"video-item-details-h\">{videoTitle}</p>\r\n                    <p className=\"video-item-details-des\">{videoName}</p>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst VideoList = function ({ videos, onClick }) {\r\n\r\n    return (\r\n        <div className=\"video-list\">\r\n\r\n\r\n            {videos.map((item) => (\r\n                <VideoItem item={item} />\r\n            ))}\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default VideoList;",{"ruleId":"26","severity":1,"message":"27","line":1,"column":38,"nodeType":"28","messageId":"29","endLine":1,"endColumn":49},{"ruleId":"30","severity":1,"message":"31","line":19,"column":13,"nodeType":"32","endLine":19,"endColumn":47},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]